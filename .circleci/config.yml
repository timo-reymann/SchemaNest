version: '2.1'

job_only_tags: &job_only_tags
  filters:
    tags:
      only: /.*/
    branches:
      ignore: /.*/

orbs:
  github-cli: circleci/github-cli@2.7.0
  docker: circleci/docker@2.8.2
  codecov: codecov/codecov@5.4.3
  go: circleci/go@3.0.2
  github-utils: trustedshops-public/github-utils@1.1.3
  semantic-release: trustedshops-public/semantic-release@6.0.0
  node: circleci/node@7.1.0

executors:
  go:
    docker:
      - image: cimg/go:1.24
  node:
    docker:
      - image: cimg/node:lts

jobs:
  test:
    executor: go
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - checkout
      - go/with-cache:
          steps:
            - run:
                name: Run tests
                command: |
                  gotestsum --junitfile junit.xml -- -race -coverprofile=coverage.txt -covermode=atomic -v ./...
      - codecov/upload
      - store_test_results:
          path: junit.xml
      - store_artifacts:
          path: junit.xml
      - store_artifacts:
          path: coverage.txt
  test-ui:
    executor: node
    steps:
      - checkout
      - node/install-packages:
          app-dir: ui
          pkg-manager: yarn-berry
      - run:
          name: Run eslint
          command: |
            cd ui
            npm run lint
  download-zig:
    executor: go
    parameters:
      zig_version:
        type: string
        default: "0.14.1"
    steps:
      - run:
          name: Download zig <<parameters.zig_version>>
          command: |
            mkdir -p .zig && cd .zig
            curl https://ziglang.org/download/<<parameters.zig_version>>/zig-x86_64-linux-<<parameters.zig_version>>.tar.xz --output zig.tar.xz
            tar -xf zig.tar.xz
            rm zig.tar.xz
            ln -s zig-x86_64-linux-<<parameters.zig_version>> current
      - persist_to_workspace:
          root: ./
          paths:
            - .zig
  build:
    executor: go
    parameters:
      platform:
        type: string
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: Install build dependencies
          command: |
            sudo ln -s $PWD/.zig/current/zig /usr/local/bin/zig
            sudo apt-get update && sudo apt-get install -y clang
      - go/with-cache:
          steps:
            - run:
                name: Build binaries
                command: make build-<<parameters.platform>> create-checksums
      - persist_to_workspace:
          root: ./
          paths:
            - dist/
  build-ui:
    executor: node
    steps:
      - checkout
      - node/install-packages:
          app-dir: ui
          pkg-manager: yarn-berry
      - restore_cache:
          keys:
            - v1-next-cache
      - run:
          name: Build frontend
          command: |
            cd ui
            yarn build
      - save_cache:
          key: v1-next-cache
          paths:
            - ui/.next/cache
      - persist_to_workspace:
          root: ./
          paths:
            - ui/build
  build-gh-pages:
    executor: node
    steps:
      - checkout
      - run:
          name: Create gh-pages folder
          command: |
            mkdir -p gh-pages
      - run:
          name: Render api docs
          command: |
            npx -y @redocly/cli@1.34 build-docs openapi.yml --output gh-pages/apidocs.html
      - github-utils/publish_github_pages:
          folder: gh-pages/
          git_commit_author_email: "no-reply@timo-reymann.de"
          git_commit_author_name: "CircleCI"
  build-oci-images:
    executor: docker/docker
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - setup_remote_docker:
          version: default
      - run:
          name: Build and publish image
          command: |
            echo "$DOCKER_TOKEN" | docker login -u "$DOCKER_USERNAME" --password-stdin
            docker buildx create --use
            export BUILDKIT_PROGRESS=plain
            make build-image -j2
      - docker/update-description:
          image: timoreymann/schemanest-cli
          docker-username: DOCKER_USERNAME
          docker-password: DOCKER_TOKEN
      - docker/update-description:
          image: timoreymann/schemanest-registry
          docker-username: DOCKER_USERNAME
          docker-password: DOCKER_TOKEN
  attach-artifacts-to-release:
    executor: go
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - github-cli/install:
          version: "2.21.2"
      - run:
          name: Attach binaries to release
          command: |
            gh release upload ${CIRCLE_TAG} dist/*

workflows:
  version: 2
  release:
    jobs:
      - download-zig:
          <<: *job_only_tags
      - build-ui:
          <<: *job_only_tags
      - build:
          <<: *job_only_tags
          requires:
            - build-ui
            - download-zig
          matrix:
            parameters:
              platform:
                - darwin
                - linux
                - windows
      - attach-artifacts-to-release:
          <<: *job_only_tags
          requires:
            - build
      - build-oci-images:
          <<: *job_only_tags
          requires:
            - build-linux
  main:
    jobs:
      - download-zig
      - build-gh-pages:
          filters:
            branches:
              only: main
      - test
      - test-ui
      - build-ui:
          requires:
            - test-ui
      - build:
          requires:
            - test
            - build-ui
            - download-zig
          matrix:
            parameters:
              platform:
                - darwin
                - linux
                - windows
      - build-oci-images:
          requires:
            - build-linux
          filters:
            branches:
              only: main
      - semantic-release/with_existing_config:
          name: semantic-release
          additional_packages: "semantic-release-replace-plugin"
          requires:
            - build
            - build-oci-images
          filters:
            branches:
              only:
                - main
